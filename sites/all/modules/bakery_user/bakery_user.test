<?php
/**
 * @file
 * Tests for the Bakery User module.
 */
class BakeryUserTests extends DrupalWebTestCase {

    public static function getInfo() {
        return array(
            'name' => 'Bakery User Tests',
            'description' => 'Tests for the Bakery User module.',
            'group' => 'Epicodus Examples Tests',
        );
    }

    public function setUp() {
        parent::setUp(array('bakery_user'));

        $user = $this->drupalCreateAdminUser();
        $this->drupalLogin($user);

        //create node here: basic page to navigate to because ours is stored in db, not created in code in the bakery_user module.
        //to create that content, we need to have a signed in user with permission to create content.
        //$info = the information needed to recreate the basic page at the url `welcome_new_user`.  
        $info = array();
        $info['title'] = "Welcome!";
        $info["body[und][0][value]"] = "Welcome to Cameron's!";
        //found the URL to post the form to by manually clicking to the Add Content menu and clicking on Page.
        $this->drupalPost('node/add/page', $info, t('Save'));

        //set new page to the correct path. We know this will be node/1 because we are starting from scratch.
        $path['source'] = 'node/1';
        $path['alias'] = 'welcome_new_user';
        path_save($path);
    }

    public function drupalCreateAdminUser(array $permissions = array()) {
        $roles = user_roles();
        $index = array_search('administrator', $roles);
        $user = $this->drupalCreateUser($permissions);
        $user->roles[$index] = 'administrator';
        return user_save($user);
    }


    public function testWelcomeNewUser() {
        // We want to navigate to the welcome_new_user page on user login. So before we check if the login hook works, make sure the page is there in this first test.
        
        // Navigate to /welcome_new_user.
        $this->drupalGet('welcome_new_user');
        // Verify that the text "Welcome to Cameron's!", exists on the page.
        $this->assertText("Welcome to Cameron's!", 'The text on the page is correct. Hoorah!');
    }

    public function drupalCreateAuthenticatedUser(array $permissions = array()) {
        $roles = user_roles();
        $index = array_search('authenticated', $roles);
        $user = $this->drupalCreateUser($permissions);
        $user->roles[$index] = 'authenticated';
        return user_save($user);
    }

    public function testLoginWelcome() {
        $user = $this->drupalCreateAuthenticatedUser();
        $this->drupalLogin($user);
        $this->assertText("Welcome to Cameron's!", 'The user was successfully redirected. Woot!');
    }

}